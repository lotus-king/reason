
/**
 * Reason
 * Copyright (C) 2009  Emerson Clarke
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "reason/reason.h"

#include "reason/system/output.h"
#include "reason/system/string.h"
#include "reason/system/format.h"

#include <sys/timeb.h>
#include <time.h>

#include <stdio.h>
#include <stdarg.h>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

char * OutputCalendar()
{

	static char now[32];

	timeb time;
	ftime(&time);
	struct tm * local = localtime((time_t*)&time.time);

	strftime(now,31,"%a %b %d %Y %I:%M:%S %p",local);
	return now;
}

void OutputBreak()
{

	#ifdef REASON_PLATFORM_WINDOWS
	#ifdef REASON_PLATFORM_X86_64
	__debugbreak();
	#else
	__asm{int 3};
	#endif
	#endif

	#ifdef REASON_PLATFORM_POSIX
	asm("int $3");
	#endif

}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void SetOutputConsole(int level, void (*Handler)(int level, const char *line))
{
	HandleOutputConsole = Handler;
}

void SetOutputPrint(int level, void (*Handler)(int level, const char *line))
{
	HandleOutputPrint = Handler;
}

void HandleOutputStdout(int level, const char *line)
{
	fprintf(REASON_HANDLE_CONSOLE,line);
}

void HandleOutputStderr(int level, const char *line)
{
	fprintf(REASON_HANDLE_OUTPUT,line);
}

void OutputConsole(char *format,...)
{
	va_list args;
	va_start(args,format);

	String line;
	Formatter::FormatVa(line,format,args);
	va_end(args);	
	HandleOutputConsole(0,line.Data);
}

void OutputPrint(char *format,...)
{
	va_list args;
	va_start(args,format);

	String line;
	Formatter::FormatVa(line,format,args);	
	va_end(args);	
	HandleOutputPrint(0,line.Data);
}

void OutputVoid(char *format,...)
{

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

