
/**
 * Reason
 * Copyright (C) 2009  Emerson Clarke
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "reason/reason.h"
#include "reason/language/regex/regex.h"

#ifdef REASON_USING_DEELX

namespace Deelx {

#include "deelx.h"

}

#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace Reason { namespace Language { namespace Regex {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifdef REASON_USING_DEELX

Regex & Regex::Construct()
{
	Matches.Release();

	return *this;
}

int Regex::Match(int limit, char * data, int size)
{
	Matches.Release();

	int matches = 0;
	int index = 0;

	Deelx::CRegexpT <char> regexp(Data,Size);
	Deelx::MatchResult result = regexp.Match(data,size,0);
	while(result.IsMatched())
	{	
		Substring match(data+result.GetStart(),result.GetEnd()-result.GetStart());

		int i = result.GetEnd();
		index = (index == i)?index+1:i;

		Matches.Append(Reason::Structure::Array<Substring>());
		Matches[matches].Append(match);

		int max = result.MaxGroupNumber();
		for (int m=1;m<=max;++m)
		{
			Substring group(data+result.GetGroupStart(m),result.GetGroupEnd(m)-result.GetGroupStart(m));
			Matches[matches].Append(group);
		}

		if (index >= size)
			break;

		result = regexp.Match(data,size,index);

		++matches;
		if (matches-limit == 0)
			break;
	}

	return matches;
}

#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
